I.am.a.vector <- c("blue","black","green","white","black","blue","blue") # color of cars passing my window
I.am.a.factor <- factor(I.am.a.vector)
I.am.a.factor
I.am.a.vector # notice the repeat of blue and black
levels(I.am.a.factor) # no repeat! Efficient storage.
levels(I.am.a.factor) <- c("negro","azul","verde","blanco")
I.am.a.factor # now in spanish
table(I.am.a.factor) # count frequency of values. table is a collection of factors
I.am.a.factor
table(I.am.a.factor) # count frequency of values. table is a collection of factors
nlevels(I.am.a.factor) # # of unique values
barplot(table(I.am.a.factor)) # extra credit
levels(ordered(I.am.a.factor))
help (ordered)
levels(I.am.a.factor)
sum(table(factor(I.am.a.vector,exclude = "blue"))) # count all cars except blue cars
(table(factor(I.am.a.vector,exclude = "blue")) # count all cars except blue cars
sum(table(factor(I.am.a.vector,exclude = "blue"))) # count all cars except blue cars
sum(table(factor(I.am.a.vector,exclude = "blue"))) # count all cars except blue cars
I.am.a.vector <- c("twas","brillig","and","the","slithey","toves")
I.am.a.matrix <- matrix(I.am.a.vector,nrow=2,ncol=3)
I.am.a.matrix
I.am.a.matrix[2,3]
dim(I.am.a.matrix)
I.am.a.matrix <- matrix(I.am.a.vector,nrow=2,ncol=3,byrow=TRUE)
I.am.a.matrix
I.am.a.matrix <- matrix(I.am.a.vector,nrow=2,ncol=3,byrow=FALSE)
I.am.a.matrix
lots.o.letters <- c(letters[1:10],LETTERS[1:10])
lots.o.letters
letter.matrix <- matrix(lots.o.letters,ncol = 2,dimnames = list(c(),c("lowercase","UPPERCASE")))
letter.matrix
letter.matrix <- matrix(lots.o.letters,nrow = 2,dimnames = list(c("lowercase","UPPERCASE"),c()))
letter.matrix
matrix.transposed <- t(I.am.a.matrix)
matrix.transposed
I.am.a.vector <- c(1,2,3,4,5,6)
I.am.also.a.vector <- c("twas","brillig","and","the","slithey","toves")
many.months <- month.abb[1:6] # e.g. jan, feb, mar, apr, may, jun
I.am.a.dataframe <- data.frame(I.am.a.vector,I.am.also.a.vector,many.months)
I.am.a.dataframe
I.am.a.short.vector <- c(1:5)
I.am.a.failure <- data.frame(I.am.a.vector,I.am.a.short.vector) #oops - different # of rows
I.am.a.dataframe[2,3] # col 3 is a factor (used to be a string)
str(I.am.a.dataframe)
I.am.a.dataframe <- data.frame(I.am.a.vector,I(many.months),row.names = I.am.also.a.vector)
str(I.am.a.dataframe)
I.am.a.dataframe["slithey","many.months"]
I.am.a.dataframe <- data.frame(I.am.a.vector,many.months,row.names = I.am.also.a.vector)
I.am.a.dataframe["slithey","many.months"]
I.am.a.dataframe["slithey","many.months"]
row.names(I.am.a.dataframe)
I.am.a.dataframe
source("~/ObsidianVault/Folders/Experiment Desgin/CI0131. Laboratorio RStudio BÃ¡sico/EjercicioR/01_10_dataframe.R")
I.am.a.dataframe <- data.frame(I.am.a.vector,I.am.also.a.vector,many.months)
I.am.a.dataframe
data("ChickWeight") # builds a data.frame
ChickWeight$someNumbers <- c(1:nrow(ChickWeight)) # number of rows must be equal
ChickWeight$someNumbers <- NULL
medianWeight <- median(ChickWeight$weight)
ChickWeight$weight <- ifelse(ChickWeight$weight > medianWeight,"Larger","Smaller")
medianTime <- median(ChickWeight$Time)
ChickWeight$Time <- with(ChickWeight, ifelse(Time > medianTime,"Longer","Shorter"))
medianTime
help(vector)
help(dataframe)
help(data.frame)
